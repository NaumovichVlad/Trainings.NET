
//  Microsoft (R) .NET Framework IL Disassembler.  Version 4.8.3928.0



// ----- DOS Header:
// Magic:                      0x5a4d
// Bytes on last page:         0x0090
// Pages in file:              0x0003
// Relocations:                0x0000
// Size of header (paragraphs):0x0004
// Min extra paragraphs:       0x0000
// Max extra paragraphs:       0xffff
// Initial (relative) SS:      0x0000
// Initial SP:                 0x00b8
// Checksum:                   0x0000
// Initial IP:                 0x0000
// Initial (relative) CS:      0x0000
// File addr. of reloc table:  0x0040
// Overlay number:             0x0000
// OEM identifier:             0x0000
// OEM info:                   0x0000
// File addr. of COFF header:  0x0080
// ----- COFF/PE Headers:
// Signature:                  0x00004550
// ----- COFF Header:
// Machine:                    0x014c
// Number of sections:         0x0003
// Time-date stamp:            0xb19dc722
// Ptr to symbol table:        0x00000000
// Number of symbols:          0x00000000
// Size of optional header:    0x00e0
// Characteristics:            0x2022
// ----- PE Optional Header (32 bit):
// Magic:                          0x010b
// Major linker version:           0x30
// Minor linker version:           0x00
// Size of code:                   0x00004200
// Size of init.data:              0x00000600
// Size of uninit.data:            0x00000000
// Addr. of entry point:           0x00006162
// Base of code:                   0x00002000
// Base of data:                   0x00008000
// Image base:                     0x10000000
// Section alignment:              0x00002000
// File alignment:                 0x00000200
// Major OS version:               0x0004
// Minor OS version:               0x0000
// Major image version:            0x0000
// Minor image version:            0x0000
// Major subsystem version:        0x0006
// Minor subsystem version:        0x0000
// Size of image:                  0x0000c000
// Size of headers:                0x00000200
// Checksum:                       0x00000000
// Subsystem:                      0x0003
// DLL characteristics:            0x8560
// Size of stack reserve:          0x00100000
// Size of stack commit:           0x00001000
// Size of heap reserve:           0x00100000
// Size of heap commit:            0x00001000
// Loader flags:                   0x00000000
// Directories:                    0x00000010
// 0x00000000 [0x00000000] address [size] of Export Directory:          
// 0x00006110 [0x0000004f] address [size] of Import Directory:          
// 0x00008000 [0x000003c8] address [size] of Resource Directory:        
// 0x00000000 [0x00000000] address [size] of Exception Directory:       
// 0x00000000 [0x00000000] address [size] of Security Directory:        
// 0x0000a000 [0x0000000c] address [size] of Base Relocation Table:     
// 0x00006068 [0x00000038] address [size] of Debug Directory:           
// 0x00000000 [0x00000000] address [size] of Architecture Specific:     
// 0x00000000 [0x00000000] address [size] of Global Pointer:            
// 0x00000000 [0x00000000] address [size] of TLS Directory:             
// 0x00000000 [0x00000000] address [size] of Load Config Directory:     
// 0x00000000 [0x00000000] address [size] of Bound Import Directory:    
// 0x00002000 [0x00000008] address [size] of Import Address Table:      
// 0x00000000 [0x00000000] address [size] of Delay Load IAT:            
// 0x00002008 [0x00000048] address [size] of CLR Header:                


// Image sections:
//              .text
//              0x00004178 Virtual Size
//              0x00002000 Virtual Address
//              0x00004200 Size of Raw Data
//              0x00000200 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x60000020 Characteristics
//                         CNT_CODE
//                         MEM_EXECUTE
//                         MEM_READ

//              .rsrc
//              0x000003c8 Virtual Size
//              0x00008000 Virtual Address
//              0x00000400 Size of Raw Data
//              0x00004400 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x40000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_READ

//              .reloc
//              0x0000000c Virtual Size
//              0x0000a000 Virtual Address
//              0x00000200 Size of Raw Data
//              0x00004800 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x42000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_DISCARDABLE
//                         MEM_READ

// Base Relocation Table
//              0x00006000 Page RVA
//              0x0000000c Block Size
//              0x00000002 Number of Entries
//              Entry 1: Type 0x3 Offset 0x00000164
//              Entry 2: Type 0x0 Offset 0x00000000

// Import Address Table
//     DLL : mscoree.dll
//              0x00002000 Import Address Table
//              0x00006152 Import Name Table
//              0          Time Date Stamp
//              0          Index of First Forwarder Reference
//
//              0x0000  _CorDllMain

// Delay Load Import Address Table
// Нет данных.

// Entry point code:
//FF 25 00 20 00 10 


// ----- CLR Header:
// Header size:                        0x00000048
// Major runtime version:              0x0002
// Minor runtime version:              0x0005
// 0x00003a5c [0x0000260c] address [size] of Metadata Directory:        
// Flags:                              0x00000001
// Entry point token:                  0x00000000
// 0x00000000 [0x00000000] address [size] of Resources Directory:       
// 0x00000000 [0x00000000] address [size] of Strong Name Signature:     
// 0x00000000 [0x00000000] address [size] of CodeManager Table:         
// 0x00000000 [0x00000000] address [size] of VTableFixups Directory:    
// 0x00000000 [0x00000000] address [size] of Export Address Table:      
// 0x00000000 [0x00000000] address [size] of Precompile Header:         

// Metadata Header
//    Storage Signature:
//              0x424a5342 Signature
//                  0x0001 Major Version
//                  0x0001 Minor Version
//              0x00000000 Extra Data Offset
//              0x0000000c Version String Length
//              'v4.0.30319' Version String
//    Storage Header:
//                    0x00 Flags
//                  0x0005 Number of Streams
//    Stream 1:
//              0x0000006c Offset
//              0x00001410 Size
//              '#~' Name
//    Stream 2:
//              0x0000147c Offset
//              0x00000bec Size
//              '#Strings' Name
//    Stream 3:
//              0x00002068 Offset
//              0x00000030 Size
//              '#US' Name
//    Stream 4:
//              0x00002098 Offset
//              0x00000010 Size
//              '#GUID' Name
//    Stream 5:
//              0x000020a8 Offset
//              0x00000564 Size
//              '#Blob' Name

//    Metadata Stream Header:
//              0x00000000 Reserved
//                    0x02 Major
//                    0x00 Minor
//                    0x00 Heaps
//                    0x01 Rid
//      0x00000a092ba29f57 MaskValid
//      0x000016003301fa00 Sorted

// Code Manager Table:
//  default


// Export Address Table Jumps:
// Нет данных.

// File size            : 18944
// PE header size       : 512 (496 used)    ( 2.70%)
// PE additional info   : 1195              ( 6.31%)
// Num.of PE sections   : 3
// CLR header size     : 72                 ( 0.38%)
// CLR meta-data size  : 9740               (51.41%)
// CLR additional info : 0                  ( 0.00%)
// CLR method headers  : 744                ( 3.93%)
// Managed code         : 5864              (30.95%)
// Data                 : 1536              ( 8.11%)
// Unaccounted          : -719              (-3.80%)

// Num.of PE sections   : 3
//   .text    - 16896
//   .rsrc    - 1024
//   .reloc   - 512

// CLR meta-data size  : 9740
//   Module        -    1 (10 bytes)
//   TypeDef       -   37 (518 bytes)     7 interfaces, 0 explicit layout
//   TypeRef       -   47 (282 bytes)
//   MethodDef     -  137 (1918 bytes)    34 abstract, 0 native, 103 bodies
//   FieldDef      -   40 (240 bytes)     2 constant
//   MemberRef     -   67 (402 bytes)
//   ParamDef      -  104 (624 bytes)
//   MethodImpl    -    1 (6 bytes)
//   Constant      -    8 (48 bytes)
//   CustomAttribute-   61 (366 bytes)
//   ClassLayout   -    1 (8 bytes)
//   StandAloneSig -   30 (60 bytes)
//   InterfaceImpl -   19 (76 bytes)
//   PropertyMap   -    7 (28 bytes)
//   Property      -   20 (120 bytes)
//   MethodSemantic-   29 (174 bytes)
//   TypeSpec      -   12 (24 bytes)
//   Assembly      -    1 (22 bytes)
//   AssemblyRef   -    2 (40 bytes)
//   NestedClass   -    7 (28 bytes)
//   FieldRVA      -    1 (6 bytes)
//   MethodSpec    -    5 (20 bytes)
//   Strings       -  3050 bytes
//   Blobs         -  1380 bytes
//   UserStrings   -    48 bytes
//   Guids         -    16 bytes
//   Uncategorized -   226 bytes

// CLR method headers : 744
//   Num.of method bodies  - 103
//   Num.of fat headers    - 39
//   Num.of tiny headers   - 64
//   Num.of fat sections   - 1
//   Num.of small sections - 7

// Managed code : 5864
//   Ave method size - 56
// Classes defined in this module:
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Class Color                          (public) (auto) (ansi) (sealed) 
// Class FigureType                     (public) (auto) (ansi) (sealed) 
// Interface IPlayer                        (public) (abstract) (auto) (ansi) 
// Class Player                         (public) (auto) (ansi) 
// Class Bishop                         (public) (auto) (ansi) 
// Class Figure                         (public) (abstract) (auto) (ansi) 
// Class FigureCollection               (public) (auto) (ansi) 
// Interface IFiguresCollection             (public) (abstract) (auto) (ansi) 
// Interface IFigure                        (public) (abstract) (auto) (ansi) 
// Class King                           (public) (auto) (ansi) 
// Class Knight                         (public) (auto) (ansi) 
// Class Pawn                           (public) (auto) (ansi) 
// Class Queen                          (public) (auto) (ansi) 
// Class Rook                           (public) (auto) (ansi) 
// Class BishopAction                   (public) (auto) (ansi) 
// Interface IFigureAction                  (public) (abstract) (auto) (ansi) 
// Class KingAction                     (public) (auto) (ansi) 
// Class KnightAction                   (public) (auto) (ansi) 
// Class PawnAction                     (public) (auto) (ansi) 
// Class QueenAction                    (public) (auto) (ansi) 
// Class RookAction                     (public) (auto) (ansi) 
// Class Field                          (public) (auto) (ansi) 
// Class FieldHandler                   (public) (auto) (ansi) 
// Interface IField                         (public) (abstract) (auto) (ansi) 
// Interface IFieldHandler                  (public) (abstract) (auto) (ansi) 
// Interface ILog                           (public) (abstract) (auto) (ansi) 
// Class Log                            (public) (auto) (ansi) 
// Class Vector                         (public) (auto) (ansi) 
// Class <PrivateImplementationDetails> (auto) (ansi) (sealed) 
// Class <>c                            (auto) (ansi) (sealed) (nested private) 
// Class <>c__DisplayClass10_0          (auto) (ansi) (sealed) (nested private) 
// Class <>c__DisplayClass5_0           (auto) (ansi) (sealed) (nested private) 
// Class <>c__DisplayClass6_0           (auto) (ansi) (sealed) (nested private) 
// Class <>c__DisplayClass7_0           (auto) (ansi) (sealed) (nested private) 
// Class <>c__DisplayClass0_0           (auto) (ansi) (sealed) (nested private) 
// Class __StaticArrayInitTypeSize=16   (explicit) (ansi) (sealed) (nested private) 
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// ================================= М Е Т А Д А Н Н Ы Е ================================================

